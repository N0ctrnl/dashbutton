.syntax unified /* use unified assembler syntax */
.code 16        /* assemble in Thumb-2  (.thumb" can also be used) */

/*
 register arguments:
 	R1: RAM address, where the code shall be uploaded to
 	R2: Code entry point
 	R3: UART 4 Base address (Control Register)
	R4: Code end pointer
	R5: Unused
*/

// r1 = 0x20024000 -- Start of last 16K of common RAM. R1 will be incremented during upload
// r2 = 0x20024001 -- Start of uploaded code (same as the initial value of R1 + 1 to mark THUMB instruction set)
// r3 = 0x4001C200 -- UART 4 CSR -- RHR has a offset of 4 and is located at 0x4001C218.
// r4 = 0x20024FFF -- Code end pointer (4K of code)
// r5 = 0x00000000 -- Unused
	
loop:

wait_rxrdy:
	/* send 1 byte */
	/* Loop until CSR Bit 1 is set */

	LDR     R6, [R3, #0x14]    // Load CSR to R6
	ANDS    R6, #1             // Test if RXRDY Bit is set
	BEQ     wait_rxrdy         // Loop until RXRDY is set
		
	// Load RHR content, store the byte into RAM and increment R1 by one
	LDR     R7, [R3, #0x18]    
	STRB.W  R7, [R1], #1

	// Loop until we uploaded 4K
	CMP 	R1, R4
	BLS loop
	
	BX R2                      // Jump to start of uploaded code

